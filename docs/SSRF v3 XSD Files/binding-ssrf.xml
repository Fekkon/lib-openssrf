<jxb:bindings version="2.1"
              xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
              xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
              jxb:extensionBindingPrefixes="xjc">

<!--   Raise theEnumMemberSizeCap limit 
  http://docs.oracle.com/cd/E17802_01/webservices/webservices/docs/2.0/tutorial/doc/JAXBUsing4.html#wp148613
  
  Setting fixedAttributeAsConstantProperty to true indicates that all fixed 
  attributes should be bound to Java constants. By default, fixed attributes 
  are just mapped to either simple or collection property, which ever is more 
  appropriate
  
  Note that the class name you specify for collectionType must implement 
  java.util.List and be callable by newInstance
  
  If typesafeEnumBase to xsd:string it would be a global way to specify that
  all simple type definitions deriving directly or indirectly from xsd:string and
  having enumeration facets should be bound by default to a typesafe enum. If 
  typesafeEnumBase is set to an empty string, "", no simple type definitions 
  would ever be bound to a typesafe enum class by default. The value of 
  typesafeEnumBase can be any atomic simple type definition except xsd:boolean 
  and both binary types.
  
  Using typesafe enums enables you to map schema enumeration values to Java 
  constants, which in turn makes it possible to do compares on Java constants 
  rather than string values.  -->

  <jxb:globalBindings typesafeEnumMaxMembers="2048"
                      fixedAttributeAsConstantProperty="true"
                      collectionType="java.util.ArrayList"
                      choiceContentProperty="false"
                      typesafeEnumBase="xs:string"
                      typesafeEnumMemberName="generateName"
                      enableFailFastCheck="false"   
                      generateIsSetMethod="false"
                      underscoreBinding="asCharInWord">
  </jxb:globalBindings>   

  <!-- Name Clash 
  JAXB does not implement case-sensitive differentiation. This causes a clash
  between the 'Remarks' complex type and 'remarks' attribute. Rename the internal
  'remarks' attribute field value to accommodate. -->
  
  <jxb:bindings schemaLocation="ssrf.xsd">
    <jxb:bindings node="//xs:complexType//xs:attribute[@name='remarks']">
      <jxb:property name="attributeRemarks"/>
    </jxb:bindings>
  </jxb:bindings>
  

<!--  XPath to <xs:attributeGroup ref="metadata"/>      //xs:complexType//xs:attributeGroup/@ref -->

 <!--  Do not build enumerated lists. -->
  <jxb:bindings schemaLocation="domains.xsd">
<!--  /xs:schema/xs:simpleType[contains(@name, 'UN')] -->
        <jxb:bindings node="//xs:simpleType[contains(@name, 'UN')]">
            <jxb:class ref="xsd:decimal"/>
        </jxb:bindings>
    </jxb:bindings>
  
</jxb:bindings>
